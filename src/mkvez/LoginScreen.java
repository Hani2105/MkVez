/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mkvez;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.Arrays;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author krisztian_csekme1
 */
public class LoginScreen extends javax.swing.JFrame {

    private static boolean OK = false;

    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();
        setMoveAble();
        this.setIconImage(new ImageIcon(this.getClass().getResource("IMG/lock_closed.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        BTN = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        TXT_PASSWORD = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        TXT_ID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        KEYPICS = new javax.swing.JLabel();
        INDI = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setUndecorated(true);
        setOpacity(0.9F);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mkvez/IMG/gest.png"))); // NOI18N
        jButton2.setToolTipText("Belépés vendégként");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        BTN.setText("Belépés");
        BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mkvez/IMG/mail.png"))); // NOI18N
        jButton1.setToolTipText("Jelszóemlékeztető kérése levélben");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TXT_PASSWORD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_PASSWORDActionPerformed(evt);
            }
        });
        TXT_PASSWORD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TXT_PASSWORDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXT_PASSWORDKeyTyped(evt);
            }
        });

        jLabel2.setText("Jelszó:");

        TXT_ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TXT_IDKeyReleased(evt);
            }
        });

        jLabel1.setText("Dolgozó ID:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mkvez/IMG/window_close24.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        KEYPICS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mkvez/IMG/lock_closed.png"))); // NOI18N

        INDI.setBackground(new java.awt.Color(153, 153, 255));
        INDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        INDI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        INDI.setMinimumSize(new java.awt.Dimension(16, 16));
        INDI.setPreferredSize(new java.awt.Dimension(16, 16));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(" MkVez 2016. Program by Krisztián Csekme");
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(KEYPICS)
                .addGap(104, 104, 104)
                .addComponent(INDI, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BTN)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 99, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TXT_PASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TXT_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(159, 159, 159))))))
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(INDI, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KEYPICS))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_ID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TXT_PASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNActionPerformed
        if (OK) {
            MkVez.ACCESS = true;
            this.setVisible(false);
        }
    }//GEN-LAST:event_BTNActionPerformed

    private void TXT_IDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXT_IDKeyReleased

        if (TXT_ID.getText().length() == 6) {
            new Thread(new Runnable() {

                @Override
                public void run() {
                    DefaultTableModel MODEL = MkVez.MYDB_DB.getDataTableModel("SELECT name,email,pass,id FROM perm WHERE id='" + TXT_ID.getText() + "';");
                    if (MODEL != null) {
                        if (MODEL.getRowCount() > 0) {
                            MkVez.NAME = MODEL.getValueAt(0, 0).toString();
                            MkVez.EMAIL = MODEL.getValueAt(0, 1).toString();
                            MkVez.PASS = MODEL.getValueAt(0, 2).toString();
                            MkVez.ID = MODEL.getValueAt(0, 3).toString();
                        }
                    }
                }
            }).start();

        }
    }//GEN-LAST:event_TXT_IDKeyReleased

    private void TXT_PASSWORDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXT_PASSWORDKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            BTNActionPerformed(null);
        } else {
            if (TXT_PASSWORD.getText().equals(MkVez.PASS)) {

                KEYPICS.setIcon(new ImageIcon(mkvez.MkVez.class.getResource("IMG/lock_open.png")));

                OK = true;

            } else {

                KEYPICS.setIcon(new ImageIcon(mkvez.MkVez.class.getResource("IMG/lock_closed.png")));
                OK = false;
            }
        }
    }//GEN-LAST:event_TXT_PASSWORDKeyReleased

    private void TXT_PASSWORDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXT_PASSWORDKeyTyped

    }//GEN-LAST:event_TXT_PASSWORDKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MkVez.ACCESS = true;
        MkVez.GEST = true;
        MkVez.NAME = "Vendég";
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (TXT_ID.getText().length() != 6) {
            JOptionPane.showMessageDialog(this, "A dolgozószámát adja meg!", "Figyelem!", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel MODEL = MkVez.MYDB_DB.getDataTableModel("SELECT email, pass FROM perm WHERE id='" + TXT_ID.getText() + "'");
            if (MODEL != null) {
                if (MODEL.getRowCount() > 0) {
                    StringBuilder SB = new StringBuilder();
                    SB.append("<HTML>");
                    SB.append("<BODY>");
                    SB.append("<BR>");
                    SB.append("<BR>");
                    SB.append("Az ön jelszava: ").append(MODEL.getValueAt(0, 1).toString());
                    SB.append("<BR>");
                    SB.append("<BR>");
                    SB.append("Üdvözlettel, a Planning Osztály");
                    SB.append("</BODY>");
                    SB.append("</HTML>");

                    EMAIL mail = new EMAIL();
                    mail.setFrom("planning@noreply.sanmina.com");
                    mail.setSubject("Az ön MkVez program jelszava");
                    mail.setTo(MODEL.getValueAt(0, 0).toString());
                    mail.setMessage(SB.toString().replace("\"", "'"));

                    if (mail.send() > 0) {
                        JOptionPane.showMessageDialog(this, "Jelszavát e-mail-ben elküldtük a " + MODEL.getValueAt(0, 0).toString() + " címre!", "Figyelem!", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ön nincs regisztrálva rendszerünkben, vegye fel a kapcsolatot a Planning-el!", "Figyelem!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ön nincs regisztrálva rendszerünkben, vegye fel a kapcsolatot a Planning-el!", "Figyelem!", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TXT_PASSWORDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_PASSWORDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_PASSWORDActionPerformed

    private Point anchorPoint = new Point();

    private void setMoveAble() {

        /**
         * This handle is a reference to THIS because in next Mouse Adapter
         * "this" is not allowed
         */
        @SuppressWarnings("unused")
        final LoginScreen handle = LoginScreen.this;
        handle.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                anchorPoint = e.getPoint();
            }

            @Override
            public void mouseDragged(MouseEvent me) {
                me.translatePoint(me.getComponent().getLocation().x, me.getComponent().getLocation().y);

                handle.setLocation(me.getX() - anchorPoint.x, me.getY() - anchorPoint.y);

            }

        });
    }

    @Override
    public void setVisible(boolean value) {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(((dim.width - this.getSize().width) / 2), ((dim.height - this.getSize().height) / 2));

        super.setVisible(value);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN;
    private javax.swing.JLabel INDI;
    private javax.swing.JLabel KEYPICS;
    private javax.swing.JTextField TXT_ID;
    private javax.swing.JPasswordField TXT_PASSWORD;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
